workspace = { members = [ "src/core/linux","src/core/windows", "src/lenzu"] }
[package]
name = "lenzu"
version = "0.1.0"
authors = [
    "Hideki A. Ikeda <hidekiai+cargo@CodeMonkeyNinja.dev@users.noreply.github.com>",
]
edition = "2018"

[build-dependencies]
pkg-config = "^0.3"
vcpkg = "^0.2"
reqwest = { version = "^0.11", features = ["blocking"] }
anyhow = "1.0"
fs_extra = "1.2"
glob = "0.3"

[lib]
# crate-type:
# * cdylib - c ABI compatible dylib (.so/.dll)
# * dylib - dynamic library that disregards C ABI compatiblity
# * staticlib - static lib (.a and/or .lib)
# * rlib - rust library for use by OTHER rust code
# NOTE: at least for Linux, it's best to stick with STATIC libs (rlib) because different distros will use different gcc libs
# For cross-compiling, consider https://github.com/rust-cross/cargo-zigbuild if the libs between distros and/or O/S-Platform
crate-type = ["rlib", "cdylib", "staticlib"]

[dependencies]
windows_desktop = {path = "../../core/windows"}
linux_desktop = {path = "../../core/linux"}
cfg-if = "1"
anyhow = "1.0"
bytemuck = { version = "1.12", features = ["derive"] }
env_logger = "0.10"
log = "0.4"
# using pollster (instead of directly calling tokio) for calling async as blocking call
pollster = "0.3"
tesseract = "0.15.0"
leptonica-sys = "^0.4"
screenshots = "0.8.5"
x11 = "2.21.0"
winapi = "0.3.9"

# winit=0.28 locked against wgpu=0.17
[dependencies.wgpu]
version = "0.17"
[dependencies.winit]
version = "0.28"

[dependencies.image]
version = "0.24"
default-features = true
features = ["png", "jpeg", "bmp", "rgb"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1"
console_log = "1.0"
# see comment on winit+wgpu version dependencies
wgpu = { version = "0.17", features = ["webgl"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = ["Document", "Window", "Element"] }

[dev-dependencies]
tokio = { version = "1", features = ["full"] }
